#!/usr/bin/python 

import sys 
import os 

if len(sys.argv) != 5:
    print("ERROR: wrong parameters numbe...")
    print("Usage: " + sys.argv[0] + " [directory] [elementForPatch] [seriesFile] [patchesDir]")
    exit(-1)

DIRECTORY=sys.argv[1]
ELEMENT_FOR_PATCH=sys.argv[2]
SERIES_FILE=sys.argv[3]
PATCHES_DIR=sys.argv[4]

#print("Getlist of patches for element " + ELEMENT_FOR_PATCH + " in directory: " + DIRECTORY)

#get LAST_COMMIT from SERIES_FILE 
seriesFile = open(SERIES_FILE, "r");
seriesFileLines = seriesFile.readlines();
seriesFileLines.reverse()
LAST_COMMIT = None
if(len(seriesFileLines) == 0):
    print("ERROR: SERIES_FILE =>" + SERIES_FILE+ " is empty")
    exit(-1)
else:
    parts = seriesFileLines[0].split(".patch")[0].split("_")
    LAST_COMMIT =  parts[-1]

#print LAST_COMMIT

command = "cd " + DIRECTORY + "; git --no-pager log --pretty=format:'%h : %s' " + LAST_COMMIT + "..HEAD | grep -e " + ELEMENT_FOR_PATCH.upper() + " -e " + ELEMENT_FOR_PATCH + " -e " + ELEMENT_FOR_PATCH.title()
#print command
commitsListString = os.popen(command).read()
commitsList = commitsListString.split('\n')
while '' in commitsList:
        commitsList.remove('')

if(len(commitsList) == 0):
    print("  ========> NO NEW COMMIT CHANGES <========="); 
else:
    #reverse list 
    commitsList.reverse();
    commitSplit = commitsList[0].split(" : ")

    #compose patch filename 
    patchFilename = commitSplit[1]
    patchFilename = patchFilename.replace(':', '').replace('\'','').replace ('\"','').replace('-','').replace('$','').replace('(','').replace(')','').replace('/','').replace(',','')
    patchFilename = patchFilename.replace(' ','_')
    patchFilename = patchFilename +"_"+commitSplit[0]+".patch"

    #get changes between patches and save to patch file 
    currentDir = os.popen("pwd").read().split('\n')
    commandGetChanges = "cd " + DIRECTORY + "; git diff "+LAST_COMMIT+" "+commitSplit[0]+" -- gst/"+ELEMENT_FOR_PATCH+"/ > " + currentDir[0] + "/" + patchFilename
    #print commandGetChanges
    output = os.popen(commandGetChanges).read()
    print output

    # remove inappropriate lines 
    patchFile = open(patchFilename, "r")
    patchLines = patchFile.readlines()
    patchFile.close() 
    patchFile = open(patchFilename, "w")
    for patchLine in patchLines:
        if patchLine.startswith("--- a"):
            patchLine = patchLine.replace("a/","")
            patchFile.write(patchLine)
        elif patchLine.startswith("+++ b"):
            patchLine = patchLine.replace("b/","")
            patchFile.write(patchLine)
        elif not patchLine.startswith("diff --git") and not patchLine.startswith("index "):
            patchFile.write(patchLine) 
    patchFile.close();

    output = os.popen("echo " + patchFilename + " >> " + SERIES_FILE)
    output = os.popen("mv " + patchFilename + " " + PATCHES_DIR)

    print "Next patch saved to: \n     " + PATCHES_DIR + "/" + patchFilename 

